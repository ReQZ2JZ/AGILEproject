from aiogram import types, Dispatcher, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from typing import Callable, Awaitable
import logging

# –°–æ—Å—Ç–æ—è–Ω–∏–µ FSM –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞
class MovieDescriptionState(StatesGroup):
    WaitingForMovie = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π"
async def movie_description_handler(message: types.Message, state: FSMContext):
    await state.set_state(MovieDescriptionState.WaitingForMovie)
    await message.answer("üé• –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, –∏ —è –æ–ø–∏—à—É –µ–≥–æ –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π:")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞
async def handle_movie_description(message: types.Message, state: FSMContext, get_movie_recommendation: Callable[[str], Awaitable[str]]):
    movie_name = message.text
    await message.answer("üîé –ò—â—É –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞...")
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞
        prompt = f"–û–ø–∏—à–∏ —Ñ–∏–ª—å–º '{movie_name}' –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π."
        description = await get_movie_recommendation(prompt)
        if description:
            await message.answer(f"üé• {movie_name}:\n{description}")
        else:
            await message.answer("üòî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_movie_description: {e}")
        await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞.")
    finally:
        await state.clear()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers_movie_description(dp: Dispatcher, get_movie_recommendation: Callable[[str], Awaitable[str]]):
    dp.message.register(movie_description_handler, F.text.lower() == "üé• –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π")
    dp.message.register(
        lambda message, state: handle_movie_description(message, state, get_movie_recommendation),
        MovieDescriptionState.WaitingForMovie
    )